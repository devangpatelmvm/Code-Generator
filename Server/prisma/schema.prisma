// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider           = "typegraphql-prisma"
  output             = "../prisma/generated/type-graphql"
  emitTranspiledCode = true
}

model Users {
  id           Int         @id @default(autoincrement())
  first_name   String
  last_name    String
  email        String      @unique
  password     String
  createdAt    DateTime    @default(now())
  user_roles   user_roles? @relation(fields: [user_rolesId], references: [id])
  user_rolesId Int?
  project      Projects[]
}

model user_roles {
  id          Int     @id @default(autoincrement())
  name        String
  permissions String
  users       Users[]
}

model Projects {
  id          Int          @id @default(autoincrement())
  description String?
  name        String
  provider    String?
  url         String?
  framework   String
  Package     Packages[]
  table       Tables[]
  user        Users        @relation(fields: [userId], references: [id])
  userId      Int
  Components  Components[]
}

model Packages {
  id        Int      @id @default(autoincrement())
  name      String?
  version   String?
  project   Projects @relation(fields: [projectId], references: [id])
  projectId Int
}

model Components {
  id        Int         @id @default(autoincrement())
  name      String
  htmlline  HtmlLines[]
  tsLine    TsLines[]
  css       Css[]
  project   Projects    @relation(fields: [projectId], references: [id])
  projectId Int
}

model HtmlLines {
  id          Int        @id @default(autoincrement())
  line        String?
  component   Components @relation(fields: [componentId], references: [id])
  componentId Int
}

model Css {
  id          Int        @id @default(autoincrement())
  content     String?
  component   Components @relation(fields: [componentId], references: [id])
  componentId Int
}

model TsLines {
  id          Int        @id @default(autoincrement())
  line        String?
  component   Components @relation(fields: [componentId], references: [id])
  componentId Int
}

model Tables {
  id        Int       @id @default(autoincrement())
  name      String?
  project   Projects  @relation(fields: [projectId], references: [id])
  projectId Int
  column    Columns[]
}

model Columns {
  id         Int     @id @default(autoincrement())
  name       String?
  type       String?
  constraint String?
  table      Tables  @relation(fields: [tableId], references: [id])
  tableId    Int
}
